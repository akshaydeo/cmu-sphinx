/**
 * [[[copyright]]]
 */

package edu.cmu.sphinx;

import java.io.Serializable;

/**
 * Represents a basic data frame. It is the data fed into a processor,
 * as well as the data generated by a processor, which is usually fed
 * into the next processor. Examples of a DataFrame include (but are
 * not limited to) a frame of audio data, pre-emphasized audio data,
 * or a feature vector.
 *
 * It is important for a speech recognizer to know if the current data
 * frame is the first or last of a data segment (a data segment is made
 * up of a series of DataFrames (or data frames)). The isSegmentStart()
 * and isSegmentEnd() methods provides that information. They are the
 * primary motivation for having this interface. If there is only one
 * DataFrame in the data segment, then both isSegmentStart() and
 * isSegmentEnd() return true.
 *
 */
public class DataFrame implements Serializable {

    private boolean segmentStart = false;
    private boolean segmentEnd = false;


    /**
     * Constructs a default DataFrame that is neither at the start of 
     * the data segment nor the end of the data segment.
     */
    public DataFrame() {}


    /**
     * Constructs a DataFrame and specify if it is at the start of the
     * data segment and/or the end of the data segment.
     *
     * @param segmentStart true if this DataFrame is the start of a segment,
     *                     false otherwise
     *
     * @param segmentEnd true if this DataFrame is the end of a segment,
     *                   false otherwise 
     */
    public DataFrame(boolean segmentStart, boolean segmentEnd) {
	this.segmentStart = segmentStart;
	this.segmentEnd = segmentEnd;
    }


    /**
     * Returns true if this DataFrame is the first one in the data segment;
     * false otherwise.
     *
     * @return true if  this is the first DataFrame in the segment
     *         false otherwise
     */
    public boolean isSegmentStart() {
	return segmentStart;
    }


    /**
     * Returns true if this DataFrame is the last one in the data segment;
     * false otherwise.
     *
     * @return true if this is the last DataFrame in the segment
     *         false otherwise
     */
    public boolean isSegmentEnd() {
	return segmentEnd;
    }
}
