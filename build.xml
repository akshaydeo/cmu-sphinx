<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="all" name="Sphinx-4">

    <!-- ********************************************************** -->
    <!-- *                                                        * -->
    <!-- * Where to find things...                                * -->
    <!-- *                                                        * -->
    <!-- ********************************************************** -->
    <path id="libs">
        <fileset dir="lib" includes="**/jsapi.jar"/>
    </path>
    <property name="src_dir"		value="."/>
    <property name="build_dir"		value="bld"/>
    <property name="classes_dir"	value="${build_dir}/classes"/>
    <property name="lib_dir"            value="${build_dir}/lib"/>
    <property name="javadoc_dir"	value="${build_dir}/javadoc"/>
    <property name="javadoc_zip"	value="javadoc.zip"/>
    <!-- Load the environment -->
    <property environment="env"/>
    <!-- Complicated way of doing a "if... else"                 -->
    <!-- Check if the environment variable is set. If it is, set -->
    <!-- the local variable to the same value.                   -->
    <condition property="EXTERNAL_JSAPI_LOCATION" 
               value="${env.EXTERNAL_JSAPI_LOCATION}">
        <isset property="env.EXTERNAL_JSAPI_LOCATION"/>
    </condition>
    <!-- If environment variable is not set, set the local       -->
    <!-- variable to a default value.                            -->
    <condition property="EXTERNAL_JSAPI_LOCATION" 
               value="/lab/speech/sphinx4/lib/jsapi.jar">
        <not>
             <isset property="env.EXTERNAL_JSAPI_LOCATION"/>
        </not>
    </condition>
    <available file="${EXTERNAL_JSAPI_LOCATION}" 
               property="jsapi_default.isPresent"/>


    <!-- ********************************************************** -->
    <!-- *                                                        * -->
    <!-- * Builds srcs, jars, demos                               * -->
    <!-- *                                                        * -->
    <!-- ********************************************************** -->
    <target name="all"
	    depends="compile_src,jars"
	    description="Build everything">
	<echo message="Build complete."/>
    </target>

    <target name="check_jsapi_jar.isPresent"
            depends="copy_jsapi_jar">
        <available file="lib/jsapi.jar" property="jsapi_jar.isPresent"/>
        <fail unless="jsapi_jar.isPresent">

Cannot find lib/jsapi.jar needed to build Sphinx-4.  Please
extract it by running jsapi.sh or jsapi.exe from the lib
directory.
        </fail>
    </target>

    <target name="copy_jsapi_jar" if="jsapi_default.isPresent">
        <copy file="${EXTERNAL_JSAPI_LOCATION}" tofile="lib/jsapi.jar"/>
    </target>

    <!-- ********************************************************** -->
    <!-- *                                                        * -->
    <!-- * Builds just the srcs.                                  * -->
    <!-- *                                                        * -->
    <!-- ********************************************************** -->
    <target name="compile_src"
	    depends="check_jsapi_jar.isPresent"
	    description="Build just the srcs">
	<mkdir dir="${classes_dir}"/>
	<javac debug="true"
	       source="1.4"
	       deprecation="true"
	       srcdir="${src_dir}"
	       includes="edu/**,com/**"
	       excludes="edu/cmu/sphinx/research/parallel/**"
	       destdir="${classes_dir}">
	    <classpath refid="libs"/>
	</javac>
    </target>

    <!-- ********************************************************** -->
    <!-- *                                                        * -->
    <!-- * Generates the jar files                                * -->
    <!-- *                                                        * -->
    <!-- ********************************************************** -->

    <target name="jars"
	    depends="sphinx4_jar"
	    description="Builds all the jar files"/>


    <!-- sphinx4.jar -->
    <property name="sphinx4_jar" value="${lib_dir}/sphinx4.jar"/>

    <target name="sphinx4_jar" 
	    depends="compile_src"
	    description="Create ${lib_dir}/sphinx4.jar">
        <mkdir dir="${lib_dir}"/>
        <jar destfile="${sphinx4_jar}" 
	     manifest="${src_dir}/edu/cmu/sphinx/sphinx4.manifest"
	     compress="true">
            <fileset dir="${classes_dir}" />
        </jar>
    </target>

    <!-- ********************************************************** -->
    <!-- *                                                        * -->
    <!-- * Generates the javadoc                                  * -->
    <!-- *                                                        * -->
    <!-- ********************************************************** -->
    <property name="javadoc_desc" value="Sphinx-4"/>

    <target name="javadoc" description="Generate javadoc">
        <mkdir dir="${javadoc_dir}"/>
        <javadoc sourcepath="${src_dir}"
	         source="1.4"
		 additionalparam="-breakiterator"
		 destdir="${javadoc_dir}" 
		 packagenames="edu.*"
	         excludepackagenames="edu.cmu.sphinx.jsapi"
		 overview="${src_dir}/overview.html"
		 windowtitle="${javadoc_desc}"
                 doctitle="${javadoc_desc}"
                 access="private">
	    <classpath refid="libs"/>
        </javadoc>
    </target>


    <!-- ********************************************************** --> 
    <!-- *                                                        * -->
    <!-- * Deletes all build output and *~ file droppings         * -->
    <!-- *                                                        * -->
    <!-- ********************************************************** --> 
    <target name="clean" description="Delete all build output">
	<delete>
	    <fileset defaultexcludes="no" dir="." includes="**/*~"/>
	</delete>
	<delete dir="${build_dir}"/>
    </target>

</project>
