# This is an awk script that will take the hub4 eval99 distribution
# and generate a script that will unpack the distribution into a set
# of audio and batch files suitable for s4.
#

BEGIN {
    audioCount = 0;
    directory = "/lab/speech/sphinx4/data/hub4/eval99/supervised/";

    print "#!/bin/sh"
    print "#  This Script unbundles the hub4/eval99 (broadcast news)"
    print "#  into a set of raw audio and batch files suitable for "
    print "#  processing by sphinx."
    print "#  "
    print "#  This script is automatically generated by unbundleHub99.awk"
    print "#  "
    print "#  "
    print "#  Create the destination directory"
    print "mkdir -p " directory;
    print "rm -rf " directory "/*";

}

function displaySummary() {
    print "========================";
    print "Sphere   : "  sphereName;
    print "Audio    : " audioName;
    print "Speaker  : "  speaker;
    print "start    : "  startTime;
    print "end      : "  endTime;
    print "duration : " duration;
    print "class    : " speechClass;
    print "sox cmd  : " soxCommand;
    print "xcrpt    : " transcript;
}

function outputCommands() {
    print "";
    print "";
    print "echo Processing" audioName 
    print soxCommand;
    print "echo " audioName " " transcript " >> " batchName;
    print "echo " audioName " " transcript " >> " allBatch;
}

function isGoodUtterance() {
    return speechClass != "";
}

$1 != ";;"  {
    audioCount++;
    source = $1;
    sphereName = $1 ".sph";
    speaker = $3;
    startTime = $4;
    endTime = $5
    duration = endTime - startTime;
    info = $6;

    split(info, infoArray, ",");
    speechClass = infoArray[2];
    transcript = "";
    for (i = 7; i <= NF; i++) {
        # markup is in parans, so drop that.
        if (index($i, "(")  == 0) {
            transcript = transcript " " $i;
        }
    }


    audioName = directory source "." audioCount "." speechClass ".raw";
    batchName = directory speechClass "_hub4.batch"
    allBatch = directory "all_hub4.batch"

    soxCommand =  "sox " sphereName " -r 16000 -s -w " audioName  \
        " trim " startTime " " duration


    if (isGoodUtterance()) {
        outputCommands();
    }
    # displaySummary();
}
