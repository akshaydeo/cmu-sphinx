temporary file of unused codes :
    
String remove new lines 

                String[] lines = oneComment[1].split("(\n|\r)+");
                String retcomment=new String();
                if ( lines.length > 1){                    
                    for (int j = 0; j < lines.length; j++) {
                        System.out.print(" line " + j + lines[j]);
                        
                        retcomment = retcomment.concat(lines[j]+" ");
                    }
                }
                System.out.println("comment after" + retcomment);

From GUI Panel creation :

 for reference of creating other Tab or Text Panel        
                JComponent panelLinguist = makeInnerTabPanel("Panel #3");
                addTabPanel("Linguist",panelLinguist,2);
        
                JComponent panelDecoder = makeTextPanel("Panel #4");
                addTabPanel("Decoder", panelDecoder,3);
        
                JComponent panelMisc = makeTextPanel("Panel #5 (has a preferred size of 410 x 50).");
                panelMisc.setPreferredSize(new Dimension(410, 50));
                addTabPanel("Miscellanous", panelMisc,4);
   
    /* only accessible for the classes in this package */
    JComponent makeInnerTabPanel(String text) {
        JPanel panel = new JPanel(false);
        panel.setLayout(new GridLayout(1, 1));
        
        
        JTabbedPane innerTab = new JTabbedPane();
        JComponent innerPanel = makeTextPanel("InnerPanel "+text);
        innerTab.addTab("InnerTab "+ text, innerPanel);
        panel.add(innerTab); 
        
        return panel;
    }
   
    /* only accessible for the classes in this package */
   JComponent makeTextPanel(String text) {
        JPanel panel = new JPanel(false);
        JLabel filler = new JLabel(text);
        filler.setHorizontalAlignment(JLabel.CENTER);
        panel.setLayout(new GridLayout(1, 1));
        panel.add(filler); 
        return panel;
   }

            
from reader :

                String nextLine;
            
                BufferedReader br = new BufferedReader(new FileReader(super.getFileName()));
                while ( (nextLine = br.readLine()) != null )         
                {
                }
                /* or ******

                FileInputStream in = new FileInputStream(confFilename);
                _myConfiguration  = new Properties(); 
                _myConfiguration.load(in);   //load the properties from configuration file
                in.close();
                 *
                 */

from writer:
 BufferedWriter out = new BufferedWriter(new FileWriter(super.getFileName()));
                
/*
                ************************ need to do
 */
                out.write("blablabla");
                out.newLine();