# Copyright 1999-2002 Carnegie Mellon University.  
# Portions Copyright 2002 Sun Microsystems, Inc.  
# Portions Copyright 2002 Mitsubishi Electronic Research Laboratories.
# All Rights Reserved.  Use is subject to license terms.
# 
# See the file "license.terms" for information on usage and
# redistribution of this file, and for a DISCLAIMER OF ALL 
# WARRANTIES.

#
# Makefile for all the AN4 tests.
#

# Relative path to the top of the source tree
TOP = ../../..
PACKAGE_PATH = tests/performance/an4

# By default, build all of the .java files. 
FILES = $(shell echo *.java)

# List any sub directories that need to be built
SUBDIRS =

# LOGGER_PROPERTIES=tiDigits.props
LOG = -Djava.util.logging.config.file=$(LOGGER_PROPERTIES)



GC_FLAGS = -ms1000m -mx1500m -XX:NewSize=300m  -XX:MaxNewSize=300m
GC_FLAGS = -ms500m -mx500m -XX:NewSize=100m  -XX:MaxNewSize=100m

LOG_GC_FLAGS=
LOG_GC_FLAGS=  -Xloggc:gc.txt
PROFILE_FLAGS= -Xprof 
PROFILE_FLAGS= 

#GC_FLAGS = -ms128m -mx3048m


DEBUG_FLAGS= 
#EXTRA_JAVA_FLAGS=$(LOG_GC_FLAGS) $(LOG)
EXTRA_JAVA_FLAGS=$(PROFILE_FLAGS) $(LOG_GC_FLAGS) $(LOG) $(GC_FLAGS) $(DEBUG_FLAGS)


HUB4_DIR=/lab/speech/sphinx4/data/hub4/eval99/supervised

BATCH=$(HUB4_DIR)/f0_hub4.batch

MERL_BATCH=/lab/speech/sphinx4/data/merlModel/merl.batch


##########################################################################

include ${TOP}/build/Makefile.config


# JAVA_FLAGS =  -Xmx1024m -ea -Xint

CLASSES = ${FILES:%.java=${CLASS_DEST_DIR}/${PACKAGE_PATH}/%.class}


# 
# check the MODE setting. If invoked with MODE=quick, run a quick
# version of the test (5 times quicker)
# 
# example:      make MODE=quick an4_words_wordlist
#
#

ifeq ($(MODE),quick)
  SKIP = 5
else
  SKIP = 0
endif

ifeq ($(MODE),super_quick)
  SKIP = 100
endif

all:: 


##########################################################################
#
# The following 14 tests are the Sphinx 4 portion of
# the "apples to rotten apples" tests between Sphinx 3 and Sphinx 4.
#
##########################################################################


# hub4_f0 with wsj models

# #########################################################
# regrssion test targets
# #########################################################

hub4_flat_unigram:
	$(JAVA_CMD) \
    -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
	edu.cmu.sphinx.decoder.BatchDecoder ./hub4.flat.props \
        $(BATCH)

hub4_trigram:
	$(MAKE) hub4_trigram_wpbfsm

hub4_trigram_f1:
	$(MAKE) BATCH=$(HUB4_DIR)/f1_hub4.batch hub4_trigram_wpbfsm



# #########################################################
# Implementations
# #########################################################
hub4_flat_unigram_original:
	$(JAVA_CMD) \
    -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
	edu.cmu.sphinx.decoder.BatchDecoder ./hub4.flat.props  $(BATCH)

hub4_trigram_original:
	$(JAVA_CMD) \
    -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
	edu.cmu.sphinx.decoder.BatchDecoder ./hub4.props $(BATCH)

hub4_trigram_quick:
	$(JAVA_CMD) \
    -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
	edu.cmu.sphinx.decoder.BatchDecoder ./hub4.props quick.batch

hub4_trigram_wpbfsm_quick:
	$(JAVA_CMD) \
    -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
	edu.cmu.sphinx.decoder.BatchDecoder ./hub4.wpbfsm.props  quick.batch

new:
	$(MAKE) hub4_trigram_wpbfsm_quick

old:
	$(JAVA_CMD) \
    -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
   -Dedu.cmu.sphinx.decoder.Recognizer.linguist=edu.cmu.sphinx.decoder.linguist.clextree.LexTreeLinguist \
	edu.cmu.sphinx.decoder.BatchDecoder ./hub4.wpbfsm.props  quick.batch

hub4_trigram_wpbfsm_test:
	$(JAVA_CMD) \
    -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
	edu.cmu.sphinx.decoder.BatchDecoder ./hub4.wpbfsm.props  test2.batch

hub4_trigram_wpbfsm:
	$(JAVA_CMD) \
    -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
	edu.cmu.sphinx.decoder.BatchDecoder ./hub4.wpbfsm.props   \
	$(BATCH)


hub4_trigram_test:
	$(JAVA_CMD) \
    -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
   -Dedu.cmu.sphinx.decoder.linguist.clextree.LexTreeLinguist.fullWordHistories=false \
	edu.cmu.sphinx.decoder.BatchDecoder ./hub4.props \
	$(BATCH)

btest:
	$(JAVA_CMD) \
    -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
	edu.cmu.sphinx.decoder.BatchDecoder ./hub4.props  $(BATCH)

       # Dedu.cmu.sphinx.decoder.search.ActiveList.relativeBeamWidth=1E-70 \

run_batch:
	$(JAVA_CMD) \
        -Dedu.cmu.sphinx.decoder.BatchDecoder.whichBatch=$(WHICH_BATCH)\
        -Dedu.cmu.sphinx.decoder.BatchDecoder.totalBatches=$(TOTAL_BATCHES)\
        -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
        $(PARSED_EXTRA_OPTIONS) \
        edu.cmu.sphinx.decoder.BatchDecoder $(PROPS) $(BATCH_FILE) 

test:
	$(JAVA_CMD) \
    -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
	edu.cmu.sphinx.decoder.BatchDecoder ./hub4.props \
        test.batch


# A test target that use the acoustic model generated by Bhiksha at MERL

merl:
	$(JAVA_CMD) \
    -Dedu.cmu.sphinx.decoder.BatchDecoder.skip=$(SKIP)\
	edu.cmu.sphinx.decoder.BatchDecoder ./merl.props   \
	$(MERL_BATCH)
