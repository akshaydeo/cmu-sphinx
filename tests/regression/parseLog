# Copyright 1999-2002 Carnegie Mellon University.  
# Portions Copyright 2002 Sun Microsystems, Inc.  
# Portions Copyright 2002 Mitsubishi Electronic Research Laboratories.
# All Rights Reserved.  Use is subject to license terms.
# 
# See the file "license.terms" for information on usage and
# redistribution of this file, and for a DISCLAIMER OF ALL 
# WARRANTIES.
#
# This script parses the output of S4 and generates a log entry

nawk '

BEGIN {

    if (ARGC != 4 ) {
        print "Usage: parseLog  logfile alignfile status"
	exit
    }
    status = ARGV[3];
    ARGV[3] = "";


    while (getline x < ARGV[1] > 0) {
        split(x, arry);
	if (summaryFound == 0) {
	    if (arry[3] == "Summary") {
		summaryFound = 1;
	    }
	} else {
	    if (arry[3] == "Audio:") {
	        audioTime = arry[4];
	        procTime = arry[6];
		gsub(/s/, "", audioTime);
		gsub(/s/, "", procTime);
	    } else if (arry[1] == "Mem") {
	        heapSize = arry[9];
	    }
	}
    }
    close(ARGV[1]);


    # parse the s4 align summary output
    summaryFound = 0;
    while (getline x < ARGV[2] > 0) {
	gsub(/\(/, "", x);
	gsub(/\)/, "", x);
        split(x, arry);
	if (summaryFound == 0) {
	    if (arry[2] == "SUMMARY") {
		summaryFound = 1;
	    }
	} else {
	    if (arry[1] == "Ref.") {
	        words = arry[4];
	    } else if (arry[1] == "Insertions") {
	        insertions = arry[4];
	    } else if (arry[1] == "Deletions") {
	        deletions = arry[4];
	    } else if (arry[1] == "Substitutions") {
	        substitutions = arry[4];
	    } else if (arry[1] == "sentences") {
	        sentences = arry[2];
	    } else if (arry[1] == "correct") {
	        correctSentences = arry[3];
	    }
	}
    }
    close(ARGV[2]);
}

END {
    testName = ARGV[1];
    gsub(/.out/, "", testName);
    # "date +%D" | getline date;
    #"date +%Y-%m-%d" | getline date;
    # "date +%T" | getline time;
    getline date < ".startDate";
    getline time < ".startTime";

    "hostname" | getline machine;
    "uptime" | getline uptime;
    "whoami" | getline who;

    count = split(uptime, arr, " ");
    loadAverage = arr[count]

    printf("test" "|");
    printf(date  "|");
    printf(time  "|");
    printf(machine "|");
    printf("s4" "|");
    printf(testName "|");
    printf(who "|");
    printf(status "|");
    printf(audioTime "|");
    printf(procTime "|");
    printf(words "|");
    printf(insertions "|");
    printf(deletions "|");
    printf(substitutions "|");
    printf(sentences "|");
    printf(correctSentences "|");
    printf(heapSize "|");
    printf(loadAverage "|");
    printf("\n");
}

'  $*
